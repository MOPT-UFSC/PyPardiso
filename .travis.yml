language: python
python:
  # We don't actually use the Travis Python, but this keeps it organized.
  - "2.7"
  - "3.4"
  - "3.5"

matrix:
  include:
    - language: generic-covered
      python: "3.5"
      os: osx
      env: pyver=3.5 pydist=macpython

    - language: generic-covered
      python: "3.4"
      os: osx
      env: pyver=3.4 pydist=macpython

    - language: generic-covered
      python: "2.7"
      os: osx
      env: pyver=2.7 pydist=macpython

#env: MALLOC_CHECK_=2

install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update;fi
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
 # - if [ $TRAVIS_OS_NAME == "osx" ]; then echo "Running on OS X"; else echo "Running on Linux"; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install conda-build
  # Useful for debugging any issues with conda
  - conda info -a

  # Replace dep1 dep2 ... with your dependencies
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      conda create -q -n test-environment python=$pyver numpy scipy mkl-service pytest;
    else
      conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy scipy mkl-service pytest;
    fi
  - source activate test-environment
  - pip install pytest-faulthandler
  #- python setup.py install
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      conda build --python $pyver .;
    else
      conda build --python $TRAVIS_PYTHON_VERSION .;
    fi
  - conda install --use-local pypardiso

script:
  # Your test script goes here
  #py.test
  python -m pytest
  

notifications:
  email:
    on_success: never # default: change
    on_failure: never # default: always
